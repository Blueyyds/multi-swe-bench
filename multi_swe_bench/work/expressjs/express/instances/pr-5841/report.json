{"org": "expressjs", "repo": "express", "number": 5841, "valid": false, "error_msg": "No fix for failed test: run=(957, 0, 0), test=(541, 2, 0), fix=(541, 2, 0)", "fixed_tests": {}, "p2p_tests": {}, "f2p_tests": {}, "s2p_tests": {}, "n2p_tests": {}, "run_result": {"passed_count": 957, "failed_count": 0, "skipped_count": 0, "passed_tests": ["should include original body on error object", "should parse without encoding", "should use the default value unless defined", "should be chainable", "should send ETag in response to ACL request", "should match a single segment only", "should all .VERB after .all", "should reject numbers for app.put", "should respond with users 1 through 3", "should populate req.params with the captures", "should pass-though mounted middleware", "should encode \"url\"", "should merge numeric indices req.params when more in parent", "should 405 when OPTIONS request", "should return true when the resource is modified", "should allow multiple calls", "should send ETag in response to OPTIONS request", "should send ETag in response to REPORT request", "should cache with \"view cache\" setting", "should parse parameters with dots", "should return the parent when mounted", "should conditionally respond with if-modified-since", "should send ETag in response to UNLINK request", "should do anything without type", "should respond with APIv1 root handler", "should fail when adding the trailing slash", "should 413 when over limit with Content-Length", "should not obscure FQDNs", "should return the first when Accept is not present", "should next() on directory", "should ignore \"text/xml\"", "should reject numbers for app.unlock", "should send ETag in response to PURGE request", "should reject numbers for app.unsubscribe", "should display the user", "should work inside literal parenthesis", "should be served with \".\"", "should invoke the callback without error when 304", "should work with IPv6 address", "should accept to text/plain", "should support array of paths with middleware array", "should return true when initial proxy is https", "should not set headers on 404", "should encode file uri path", "should parse \"application/vnd+octets\"", "should send ETag in response to LINK request", "should be reasonable when infinite", "should not send cache-control header with immutable", "should 304 when ETag matches", "should otherwise return the value", "should work when at the limit", "should default to the parent app", "should span multiple segments", "should strip path from req.url", "should expose app.locals", "should allow literal \".\"", "should say hello", "should be ignored", "should denote an optional format", "should 404 for directory", "should include PROPPATCH", "should be inclusive", "should set relative expires", "should allow ../ when \"root\" is set", "should work if path has trailing slash", "should reject non-functions", "should 404 when trailing slash", "should parse complex keys", "should 404 for directory without trailing slash", "should be empty by default", "should redirect to /login", "should support HEAD", "should accept headers option", "should return an empty array", "should be optional", "should return true when present", "should set Link header field for multiple calls", "should pass the resulting string", "should not touch already-encoded sequences in \"url\"", "should not honor range requests", "should map logic for a single param", "should return undefined if no range", "should reject numbers for app.acl", "should support mount-points", "should return true without response headers", "should respond with json for String", "should ensure regexp matches path prefix", "should create a pet for user", "should send ETag in response to NOTIFY request", "should respond with 401 unauthorized", "should ignore \"application/x-foo\"", "should support empty string path", "should fall-through when directory", "should lookup the file in the path", "should presist store when parse error", "should send ETag in response to MKCALENDAR request", "should support windows", "should include OPTIONS", "should not parse primitives", "should support gzip encoding", "should support nesting", "should include MKACTIVITY", "should not redirect to protocol-relative locations", "should send the status code and message as body", "should default to false", "should act like \"extended\"", "should set a cookie", "should permit modifying the .response prototype", "should redirect correctly", "should include PATCH", "should reject null as middleware", "should not invoke without a body", "should return the client addr", "should parse array of objects syntax", "should list users", "should return the Host when present", "should consistently handle empty string input", "should invoke the callback when client aborts", "should map app.param(name, ...) logic", "should presist store when inflate error", "should work \"view engine\" with leading \".\"", "should 403 when traversing past root", "should set expires when passed", "should match no slashes", "should call param function when routing VERBS", "should throw if a callback is null", "should invoke the callback on 404", "should not hang response", "should 415 on unknown charset prior to verify", "should set the response status code to 501", "should ignore the body", "should set multiple fields", "should delete users", "should lookup the mime type", "should redirect to /users", "should 404 on missing user", "should disable redirect", "should handle throwing in handler after async param", "should not get called on 404", "should return encoding if accepted", "should not throw on null", "should consistently handle non-string inputs: array", "should send ETag", "should display the users pets", "should set low priority", "should ensure redirect URL is properly encoded", "should check req.query", "should include HTML link", "should set a value", "should default to utf-8", "should set Last-Modified", "should keep charset in Content-Type for Buffers", "should send ETag when manually set", "should return the mounted path", "should presist store when unmatched content-type", "should send ETag in response to UNBIND request", "should include HEAD", "should override charset", "should ignore FQDN in path", "should reject numbers for app.subscribe", "should ignore dotfiles", "should return type if not given charset", "should return the addr after trusted proxy based on count", "should include UNBIND", "should set the correct charset for the Content-Type", "should respond users json", "should include Cache-Control", "should reject number as middleware", "should invoke callback with a string", "should work when mounted", "should allow merging existing req.params", "should give precedence to res.locals over app.locals", "should accept suffix \"m\" for minutes", "should match identical casing", "should support disabling extensions", "should return an array", "should respond to range request", "should not override Content-Type", "should reject numbers for app.rebind", "should throw when the callback is missing", "should load the file when on trailing slash", "should allow rewriting of the url", "should support using .all to capture all http verbs", "should reject numbers for app.unlink", "should include REPORT", "should transfer as an attachment", "should support -n", "should set .statusCode", "should reject numbers for app.head", "should not serve dotfiles", "should default to text/html", "should default max-age=0", "should match middleware when adding the trailing slash", "should be false if encoding not accepted", "should prefer \"Referrer\" header", "should include UNSUBSCRIBE", "should not send falsy ETag", "should generate a JSON cookie", "should disable \"view cache\"", "should default object", "should set location from \"Referer\" header", "should respond with users", "should not error on empty routes", "should return an array with the whole domain", "should dispatch", "should not call when values differ on error", "should return the app", "should default to the socket addr if X-Forwarded-Proto not present", "should handle duplicated middleware", "should respond with json and set the .statusCode", "should redirect to trailing slash mount point", "should support altering req.params across routes", "should contain lower path", "should jump out of router", "should work with encoded values", "should merge numeric indices req.params", "is taken to be equal to one less than the current length", "should set the header", "should parse text/plain", "should change default charset", "should encode unicode correctly even with a bad host", "should work with several", "should send ETag in response to GET request", "should not include Accept-Ranges", "should 413 when inflated value exceeds limit", "should return false when set", "should utilize qvalues in negotiation", "should use last header when duplicated", "should redirect to trailing slash", "should include CHECKOUT", "should parse extended syntax", "should return false when no match is made", "should give precedence to res.render() locals over app.locals", "should not choke on auth-looking URL", "should reject numbers for app.link", "should be ignored case-insensitively", "should accept suffix \"s\" for seconds", "should update the user", "should be able to invoke other formatter", "should respond with no cookies", "should return the app when undefined", "should catch urlencoded ../", "should extend the request prototype", "should require a preceding /", "should not change when options altered", "should serve static files", "should redirect when directory without slash", "should 400 when URL malformed", "should be passed to JSON.stringify()", "should reject numbers for app.mkcol", "should escape the url", "should send ETag in response to PATCH request", "should respond with 416", "should return true when X-Requested-With is xmlhttprequest", "should set \"trust proxy fn\"", "should correctly encode schemaless paths", "should accept an argument list of type names", "should 415 on unknown charset", "should throw on bad value", "should not perform freshness check unless 2xx or 304", "should render login form", "should expose text middleware", "should floor cache-control max-age", "should eat everything after /", "should return a function with router methods", "should inherit from event emitter", "should allow naming", "should handle throw in .all", "should unicode escape HTML-sniffing characters", "should not alter the status", "should reject numbers for app.proppatch", "should return combined ranges", "should support conditional requests", "should redirect directories", "should keep charset if not given charset", "should work without content-type", "should add the filename param", "should default to true", "should not override previous Content-Types with no callback", "should send ETag in response to M-SEARCH request", "should send ETag in response to CHECKOUT request", "should return the type when matching", "should set ETag", "should accept plain number as milliseconds", "should give precedence to app.render() locals", "should 415 on unknown encoding", "should consistently handle non-string input: boolean", "should add the filename and filename* params", "should encode data uri", "should be callable", "should include a Content-Range header of complete length", "should return an array with the whole IPv6", "should pass it to the callback", "should 404", "should reject numbers for app.options", "should accept nested arrays of middleware", "should ignore X-Forwarded-Host", "should parse x-www-form-urlencoded", "should support ../", "should allow []", "should 413 when inflated body over limit", "should mount the app", "should not throw on undefined", "should throw", "should not allow root path disclosure", "should respect X-Forwarded-Proto", "should respond with error", "should handle VERBS", "should fail if not given fn", "should generate a signed JSON cookie", "should set the header to \"/\" without referrer", "should disallow arbitrary js", "should run in order added", "should respond with root handler", "should enable \"view cache\"", "should only call once per request", "should accept any type", "should include Accept-Ranges", "should respond with a user", "should respond with user 1", "should support buffer", "should allow leading whitespaces in JSON", "should send ETag in response to MKACTIVITY request", "should override Content-Type", "should allow dotfiles", "should return false when the resource is not modified", "should set the Content-Type", "should disallow requesting out of \"root\"", "should redirect to /bar", "should work correctly despite using deprecated url.parse", "should return the header field value", "should Content-Disposition to attachment", "should throw with invalid priority", "should raise error for invalid status code", "should expose the request prototype", "should set high priority", "should parse JSON for \"application/json\"", "should denote an optional capture group", "should include Last-Modified", "should not send ETag for res.send()", "should invoke the callback when client already aborted", "should work with unknown code", "should pass-though middleware", "should send weak ETag", "should parse primitives", "should ignore object callback parameter with jsonp", "should reject numbers for app.purge", "should support utf8 strings", "should handle empty message-body", "should 400 when only whitespace", "should include correct message in stack trace", "should get a user to edit", "should call when values differ when using \"next\"", "should include POST", "should support strings", "should redirect to /foo", "should not throw if all callbacks are functions", "should fall-through when OPTIONS request", "should support index.<engine>", "should throw on old middlewares", "should include MKCALENDAR", "should 400 for incomplete", "should lookup in later paths until found", "should be case-insensitive", "should send last-modified header", "should respect X-Forwarded-Host", "should continue lookup", "should get a list of posts", "should always check regardless of length", "should expose res.locals", "should reject numbers for app.trace", "should throw when Content-Type is an array", "should set the value to false", "should set prototype values", "should set the Content-Type based on a filename", "should set the response status", "should fail integer parsing", "should fall-through when URL too long", "should be empty for top-level route", "should work with https", "should deny dotfiles", "should still serve", "should not parse complex keys", "should support mounted app anywhere", "should take quality into account", "should allow options to res.sendFile()", "should respond with 404", "should edit a user", "should invoke middleware for all requests starting with path", "should support absolute paths", "should send ETag in response to SUBSCRIBE request", "should accept string", "should only call an error handling routing callback when an error is propagated", "should contain app settings", "should skip POST requests", "should send ETag in response to HEAD request", "should display a list of users", "should next(err)", "should skip non error middleware", "should set a session cookie", "should respond with index", "should reject numbers for app.copy", "should include DEL", "should return an array with the whole IPv4", "should cache with cache option", "should expose raw middleware", "should alias app.delete()", "should cap cache-control max-age to 1 year", "should parse when truthy value returned", "should not set Vary", "should require root path to be string", "should add a router per method", "should display 1 view on revisit", "should cap to the given size when open-ended", "should not include Cache-Control", "should match middleware", "should catch thrown secondary error", "should allow relative path", "should redirect directories with query string", "should presist store when limit exceeded", "should get pet edit page", "should flatten an array", "should return undefined for prototype values", "should not override ETag", "should 413 when over limit with chunked encoding", "should ignore hidden files", "should send ETag in response to MERGE request", "should error from verify", "should handle missing URL", "should redirect relative to the originalUrl", "should work with res.set(field, val) first", "should be called for any URL when \"*\"", "should require root path", "should support empty string", "should get the response header field", "should display login error for bad password", "should adjust FQDN req.url with multiple handlers", "should be disabled by default", "should parse deep object", "should set a signed cookie", "should reject numbers for app.source", "should redirect to /login without cookie", "should restore req.params", "should no set cookie w/o reminder", "should support array of paths", "should send as application/json", "should parse codepage charsets", "handle missing method", "should return false without response headers", "should work with IPv4 address", "should default to false for prototype values", "should transfer a file", "should not break undefined escape", "should return undefined otherwise", "should run the callback for a method just once", "should reject numbers for app.merge", "should return the remote address", "should send ETag in response to MKCOL request", "should return false when the resource is modified", "should accept array of middleware", "should decode correct params", "should default to development", "should decode the capture", "should be configurable", "should honor content-type charset", "should not be case sensitive", "should output the same headers as GET requests", "should respond with default Content-Security-Policy", "should set multiple response header fields", "should throw an error", "should overwrite existing req.params by default", "should throw an error with invalid maxAge", "should work without handlers", "should send ETag in response to PROPFIND request", "should parse multiple key instances", "should send strong ETag", "should reject numbers for app.del", "should invoke the callback on 403", "should permit modifying the .request prototype", "should support windows unc", "should accept to application/json", "should respond to cookie", "should include security header and prologue", "should work when only .default is provided", "should error without \"view engine\" set and no file extension", "should include PURGE", "should return a new route", "should use first callback parameter with jsonp", "should serve relative to \"root\"", "should presist store", "should return []", "should default to a 302 redirect", "should include M-SEARCH", "should accept range requests", "should return false otherwise", "should respond with text", "should handle no message-body", "should override charset in Content-Type", "should next(404) when not found", "should set the response status code to 410", "should respond with users from APIv2", "should set the values", "should set Content-Type", "should coerce to an array of strings", "should include REBIND", "should set the response status code to 302", "should support fallbacks", "should assert value if function", "should reject Date as middleware", "should reject string", "should handle single error handler", "should return the first acceptable type with canonical mime types", "should parse array index notation with large array", "should respond repos json", "should override the default behavior", "should use the first value", "should parse array index notation", "should include UNLOCK", "should default to the routes defined", "should fail without proper password", "should match the pathname only", "should work following a partial capture group", "should return true when the resource is not modified", "should support dynamic routes", "should ignore X-Forwarded-Proto if socket addr not trusted", "should extend the response prototype", "should permit modifying the .application prototype", "should populate the capture group", "should include MERGE", "should not match otherwise", "should only extend for the referenced app", "should set charset", "should not get invoked without error handler on error", "should forward requests down the middleware chain", "should always lookup view without cache", "should reject numbers for app.report", "should reject numbers for app.get", "should not invoke without route handler", "should jump to next route", "should parse utf-16", "should set the response header field", "should not redirect incorrectly", "should not accept content-encoding", "should respond with 403", "should allow several capture groups", "should support identity encoding", "should override", "should provide a helpful error", "should respond with all users", "should get reset by res.set(field, val)", "should get pet", "should special-case Referer", "should return false when not matching", "should include TRACE", "should invoke callback with an array", "should get a users pet", "should default to GET", "should throw with notice", "should set the Content-Type with type/subtype", "should send ETag in response to MOVE request", "should cap to the given size", "should invoke the callback", "should support deflate encoding", "should be served when dotfiles: \"allow\" is given", "should support unices", "should not include Last-Modified", "should set Link header field", "should not serve dotfiles by default", "should respond with users from APIv1", "should give precedence to res.render() locals over res.locals", "should not be greedy immediately after param", "should Vary: Accept", "should not honor if-modified-since", "should support index.html", "should use params from router", "should send ETag in response to SOURCE request", "should respond with APIv2 root handler", "should parse when content-length != char length", "should include COPY", "should parse application/octet-stream", "should respond with 500", "should include PROPFIND", "should handle throwing inside error handlers", "should support byte ranges", "should allow up within root", "should accept suffix \"d\" for days", "should ignore Rage request header", "should include ACL", "should set \"etag fn\"", "should send ETag in response to TRACE request", "should render the template", "should 413 if over limit", "should not parse query", "should set the given params", "should respond with json for null", "should preserve trailing slashes when not present", "should not advertise accept-ranges", "should error for non-absolute path", "should serve zero-length files", "should add handler", "should include DELETE", "should send ETag in response to LOCK request", "should strip port number", "should advertise byte range accepted", "should set the response status code to 201", "should work without leading \".\"", "should set location from \"Referrer\" header", "should 400 when invalid content-length", "should allow custom codes", "should respond with html", "should set Content-Range", "should consistently handle relative urls", "should work if number is floating point", "should reject numbers for app.lock", "should fail on unknown charset", "should expose urlencoded middleware", "should 404 when directory", "should check req.body", "should transfer a directory index file", "should set both maxAge and expires when passed", "should respond with requested byte range", "should return the canonical", "should encode unicode correctly", "should fail when omitting the trailing slash", "should not encode urls in such a way that they can bypass redirect allow lists", "should not be affected by app.all", "should respond with page list", "should send ETag in response to UNSUBSCRIBE request", "should inherit \"trust proxy\" setting", "should say foo", "should support .get", "should check req.params", "should allow custom type", "should invoke the callback when complete", "should not override manual content-types", "should respond with three users", "should map the array", "should accept multiple arguments", "should call when values differ", "should return an array of the specified addresses", "should return true when Accept is not present", "should use status as second number for backwards compat", "should send cache-control header with immutable", "should encode the url", "should defer to next route", "should return false when http", "should restore req.params after leaving router", "should work in array of paths", "should accept number of bytes", "should send ETag in response to POST request", "should display the edit form", "should fall-through when URL malformed", "should denote a format", "should behave like connect", "should send no ETag", "should 404 when not found", "should escape utf whitespace", "should fail gracefully", "should reject numbers for app.unbind", "should remove OWS around comma", "should allow wildcard type/subtypes", "should consistently handle non-string inputs: object", "should allow fallthrough", "should obey Rage request header", "should consider ../ malicious when \"root\" is not set", "should override previous Content-Types with callback", "should reject up outside root", "should work together with res.cookie", "should not mix requests", "should set .statusCode and body", "should handle throwing inside routes with params", "should reject numbers for app.m-search", "should ignore \"application/x-json\"", "should send cache-control header", "should accept dotfiles option", "should set the value", "should be called for any URL", "should return undefined when unset", "should work with different charsets", "should ignore headers option on 404", "should set headers on response", "should not error if the client aborts", "should call handler in same route, if exists", "should provide an alternate filename", "should set the child's .parent", "should not parse primitives with leading whitespaces", "should given precedence to the child", "should send ETag in response to PUT request", "should include the redirect type", "should invoke the first callback", "should work with large limit", "should redirect to /", "should inherit to sub apps", "should reject numbers for app.notify", "should work with IPv6 Host", "should include SEARCH", "should strip Content-* fields, Transfer-Encoding field, and body", "should include SUBSCRIBE", "should ignore invalid incoming req.params", "should fall-through when traversing past root", "should 500 on error", "should respond user repos json", "should parse utf-8", "should capture everything", "should respond with json", "should reject numbers for app.mkcalendar", "should expose the response prototype", "should ignore X-Forwarded-Proto", "should include MOVE", "should respond with json for Number", "should reject numbers for app.search", "should prefer child \"trust proxy\" setting", "should not escape utf whitespace for json fallback", "should re-route when method is altered", "should error for non-string path", "should map a template engine", "should set partitioned", "should utilize the same options as express.static()", "should reject numbers for app.move", "should return the first acceptable type", "should set Content-Length to the # of octets transferred", "should only include each method once", "should work with Infinity limit", "should create an instance of it", "should support n-", "should return the addr after trusted proxy based on list", "should parse using function", "should not override previous Content-Types", "should respond with jsonp", "should stack", "should not have last-modified header", "should include PUT", "should next() on mount point", "should respond with an empty body", "should handle errors via arity 4 functions", "should allow renaming callback", "should presist store on error", "should include LOCK", "should reject numbers for app.propfind", "should pass error to callback", "should include LINK", "should handle Content-Length: 0", "should fail", "should not error when inflating", "should 400 on primitives", "should send ETag in response to UNLOCK request", "should transfer a file with special characters in string", "should respond with hello world", "should defer all the param routes", "should support .use of other routers", "should transfer the file", "should 404 if nothing found", "should adapt the Content-Length accordingly", "should send as octet-stream", "should fall-through when directory without slash", "should send custom ETag", "should parse for custom type", "should contain full lower path", "should case-insensitive", "should throw if a callback is undefined", "should error without \"view engine\" set and file extension to a non-engine module", "should be not be enabled by default", "should get called when sending file", "should be undefined by default", "should work with unicode", "should assert value is function", "should succeed with proper cookie", "should set cache-control max-age to milliseconds", "should respond with 404 json", "should not get called on redirect", "should denote a greedy capture group", "should expose static middleware", "should return the full type when matching", "should match middleware when omitting the trailing slash", "should catch thrown error", "should default to http", "should default the Content-Type", "should be invoked instead of auto-responding", "should send ETag in response to PROPPATCH request", "should return parsed ranges", "should send ETag in response to DELETE request", "should parse \"application/octet-stream\"", "should allow sub app to override", "should not stack overflow with a large sync stack", "should include SOURCE", "should include NOTIFY", "should send as html", "should not accept params in malformed paths", "should respond with instructions", "should delete user 1", "should accept content-encoding", "should expose Router", "should respond with 200 and the entire contents", "should set medium priority", "should not pollute parent app", "should update the pet", "should include BIND", "should be supported for backwards compat", "should get a users pets", "should 404 with unknown user", "should emit \"mount\" when mounted", "should accept an instance of URL", "should match trailing slashes", "should not override ETag when manually set", "should return true", "should succeed with proper credentials", "should display login error for bad user", "should 400 on malformed encoding", "should not send cache-control", "should break out of app.router", "should return true when set", "should support urlencoded pathnames", "should set immutable directive in Cache-Control", "should always return language", "should default to Host", "should include GET", "should error missing path", "should reject numbers for app.post", "should transfer a file with urlencoded name", "should set max-age", "should error if file does not exist", "should 404 when directory without slash", "should remove Content-Disposition", "should respond with users 2 and 3 as json", "should respond with 206 \"Partial Content\"", "should 500 if stream not readable", "should not mutate the options object", "should be optional by default", "should not send cache-control header", "should include ETag", "should set the response status code to 403", "should respond with 400 bad request", "should parse JSON for custom type", "should return language if accepted", "should send ETag for long response", "should parse fully-encoded extended syntax", "should ignore application/x-foo", "should not add it again", "should append multiple headers", "should return the protocol string", "should have a link to amazing.txt", "should display no views", "should not set a charset of one is already set", "should ignore maxAge", "should reject numbers for app.bind", "should reject reading outside root", "should merge numeric indices req.params when parent has same number", "should return the addr after trusted proxy, from sub app", "should return false when initial proxy is http", "should invoke the callback on socket error", "should default to {}", "should adjust FQDN req.url with multiple routed handlers", "should 404 when URL too long", "should have a form", "should support absolute paths with \"view engine\"", "should set the value to true", "should not stack overflow with a large sync middleware stack", "should return false", "should work \"view engine\" setting", "should handle throw", "should respond with an error", "should stop at first untrusted", "should ignore charset", "should set params", "should default to application/octet-stream", "should wrap with an HTTP server", "should send ETag in response to COPY request", "should ignore FQDN in search", "should expose the application prototype", "should throw for non-string header name", "should fail to find user", "should include MKCOL", "should support precondition checks", "should be .use()able", "should parse JSON", "should keep correct parameter indexes", "should throw if a callback is not a function", "should parse \"application/x-www-form-urlencoded\"", "should be the executed Route", "should allow pass-through", "should return the parsed pathname", "should not stack overflow with a large sync route stack", "should not stack overflow with many registered routes", "should keep backslashes in the path", "should be false if language not accepted", "should include UNLINK", "should expose json middleware", "should reject numbers for app.checkout", "should fail without proper username", "should set body to \"\"", "should parse JSON for \"application/vnd.api+json\"", "should should respond with 406 not acceptable", "should get a user", "should 404 without routes", "should denote a capture group", "should reject numbers for app.delete", "should reject 0", "should handle render error throws", "should have a download header", "should allow escaped regexp", "should travel through routers correctly", "should set a cookie passed expiry", "should not respond if the path is not defined", "should throw missing header name", "should not parse extended syntax", "should parse \"text/plain\"", "should not support jsonp callbacks", "should return set value", "should call param function when routing middleware", "should invoke callback with a number", "should reject numbers for app.patch", "should respond with 304 Not Modified when fresh", "should support regexp path", "should invoke callback with null", "should default to true for prototype values", "should expose app.locals with `name` property", "should work within arrays", "should send ETag in response to BIND request", "should require middleware", "should accept multiple arrays of middleware", "should work cross-segment", "should default to parse complex keys", "should return true when \"trust proxy\" is enabled", "should respond with json and set the .statusCode for backwards compat", "should adjust FQDN req.url", "should work with IPv6 Host and port", "should presist store when inflated", "should not decode spaces", "should parse \"application/x-pairs\"", "should reject string as middleware", "should ignore standard type", "should invoke callback with no arguments", "should 400 for bad token", "should accept array of values", "should throw on invalid date", "should invoke the callback without error when HEAD", "should invoke callback with an object", "should send number as json", "should send ETag in response to REBIND request", "should ignore X-Forwarded-Host if socket addr not trusted", "should strip Transfer-Encoding field and body, set Content-Length", "should send cache-control by default", "should parse \"text/html\"", "should have a .type", "should reject numbers for app.mkactivity", "should handle blank URL", "should send ETag for empty string response", "should limit to just .VERB", "should clear cookie", "should coerce to a string", "should send ETag in response to SEARCH request", "should return a signed JSON cookie", "should escape header splitting for old node versions", "should invoke middleware for all requests", "should return false when not present", "should pass options to send module", "should min cache-control max-age to 0"], "failed_tests": [], "skipped_tests": []}, "test_patch_result": {"passed_count": 541, "failed_count": 2, "skipped_count": 0, "passed_tests": ["should include original body on error object", "should parse without encoding", "should use the default value unless defined", "should be chainable", "should match a single segment only", "should all .VERB after .all", "should reject numbers for app.put", "should populate req.params with the captures", "should pass-though mounted middleware", "should merge numeric indices req.params when more in parent", "should 405 when OPTIONS request", "should cache with \"view cache\" setting", "should parse parameters with dots", "should return the parent when mounted", "should fail when adding the trailing slash", "should 413 when over limit with Content-Length", "should not obscure FQDNs", "should return the first when Accept is not present", "should next() on directory", "should ignore \"text/xml\"", "should reject numbers for app.unlock", "should reject numbers for app.unsubscribe", "should work inside literal parenthesis", "should be served with \".\"", "should support array of paths with middleware array", "should parse \"application/vnd+octets\"", "should be reasonable when infinite", "should otherwise return the value", "should work when at the limit", "should default to the parent app", "should span multiple segments", "should strip path from req.url", "should expose app.locals", "should allow literal \".\"", "should denote an optional format", "should include PROPPATCH", "should be inclusive", "should work if path has trailing slash", "should reject non-functions", "should 404 when trailing slash", "should support HEAD", "should return an empty array", "should be optional", "should return true when present", "should map logic for a single param", "should reject numbers for app.acl", "should support mount-points", "should ensure regexp matches path prefix", "should ignore \"application/x-foo\"", "should support empty string path", "should fall-through when directory", "should lookup the file in the path", "should presist store when parse error", "should include OPTIONS", "should not parse primitives", "should support gzip encoding", "should support nesting", "should include MKACTIVITY", "should not redirect to protocol-relative locations", "should default to false", "should permit modifying the .response prototype", "should redirect correctly", "should include PATCH", "should reject null as middleware", "should not invoke without a body", "should return the client addr", "should parse array of objects syntax", "should return the Host when present", "should map app.param(name, ...) logic", "should presist store when inflate error", "should work \"view engine\" with leading \".\"", "should 403 when traversing past root", "should match no slashes", "should call param function when routing VERBS", "should throw if a callback is null", "should not hang response", "should 415 on unknown charset prior to verify", "should lookup the mime type", "should disable redirect", "should handle throwing in handler after async param", "should not get called on 404", "should return encoding if accepted", "should ensure redirect URL is properly encoded", "should check req.query", "should include HTML link", "should set a value", "should default to utf-8", "should set Last-Modified", "should return the mounted path", "should presist store when unmatched content-type", "should include HEAD", "should ignore FQDN in path", "should reject numbers for app.subscribe", "should return the addr after trusted proxy based on count", "should include UNBIND", "should include Cache-Control", "should reject number as middleware", "should allow merging existing req.params", "should match identical casing", "should support disabling extensions", "should reject numbers for app.rebind", "should throw when the callback is missing", "should load the file when on trailing slash", "should allow rewriting of the url", "should support using .all to capture all http verbs", "should reject numbers for app.unlink", "should include REPORT", "should support -n", "should reject numbers for app.head", "should default max-age=0", "should match middleware when adding the trailing slash", "should be false if encoding not accepted", "should include UNSUBSCRIBE", "should disable \"view cache\"", "should default object", "should not error on empty routes", "should dispatch", "should not call when values differ on error", "should return the app", "should handle duplicated middleware", "should redirect to trailing slash mount point", "should support altering req.params across routes", "should contain lower path", "should jump out of router", "should work with encoded values", "should merge numeric indices req.params", "is taken to be equal to one less than the current length", "should parse text/plain", "should change default charset", "should work with several", "should not include Accept-Ranges", "should 413 when inflated value exceeds limit", "should return false when set", "should redirect to trailing slash", "should include CHECKOUT", "should parse extended syntax", "should return false when no match is made", "should not choke on auth-looking URL", "should reject numbers for app.link", "should return the app when undefined", "should catch urlencoded ../", "should extend the request prototype", "should require a preceding /", "should not change when options altered", "should serve static files", "should redirect when directory without slash", "should 400 when URL malformed", "should reject numbers for app.mkcol", "should respond with 416", "should set \"trust proxy fn\"", "should accept an argument list of type names", "should 415 on unknown charset", "should throw on bad value", "should expose text middleware", "should eat everything after /", "should return a function with router methods", "should inherit from event emitter", "should allow naming", "should handle throw in .all", "should not alter the status", "should reject numbers for app.proppatch", "should support conditional requests", "should redirect directories", "should work without content-type", "should default to true", "should return the type when matching", "should give precedence to app.render() locals", "should 415 on unknown encoding", "should be callable", "should include a Content-Range header of complete length", "should reject numbers for app.options", "should accept nested arrays of middleware", "should ignore X-Forwarded-Host", "should parse x-www-form-urlencoded", "should support ../", "should 413 when inflated body over limit", "should mount the app", "should not allow root path disclosure", "should handle VERBS", "should fail if not given fn", "should run in order added", "should enable \"view cache\"", "should only call once per request", "should include Accept-Ranges", "should allow leading whitespaces in JSON", "should return the header field value", "should expose the request prototype", "should parse JSON for \"application/json\"", "should denote an optional capture group", "should include Last-Modified", "should pass-though middleware", "should parse primitives", "should reject numbers for app.purge", "should handle empty message-body", "should 400 when only whitespace", "should include correct message in stack trace", "should call when values differ when using \"next\"", "should include POST", "should not throw if all callbacks are functions", "should fall-through when OPTIONS request", "should support index.<engine>", "should throw on old middlewares", "should include MKCALENDAR", "should 400 for incomplete", "should lookup in later paths until found", "should be case-insensitive", "should respect X-Forwarded-Host", "should continue lookup", "should reject numbers for app.trace", "should set the value to false", "should set prototype values", "should fall-through when URL too long", "should be empty for top-level route", "should support mounted app anywhere", "should take quality into account", "should invoke middleware for all requests starting with path", "should support absolute paths", "should accept string", "should only call an error handling routing callback when an error is propagated", "should contain app settings", "should skip POST requests", "should skip non error middleware", "should reject numbers for app.copy", "should include DEL", "should cache with cache option", "should expose raw middleware", "should alias app.delete()", "should parse when truthy value returned", "should require root path to be string", "should add a router per method", "should not include Cache-Control", "should match middleware", "should catch thrown secondary error", "should redirect directories with query string", "should presist store when limit exceeded", "should return undefined for prototype values", "should 413 when over limit with chunked encoding", "should ignore hidden files", "should error from verify", "should handle missing URL", "should redirect relative to the originalUrl", "should be called for any URL when \"*\"", "should require root path", "should adjust FQDN req.url with multiple handlers", "should be disabled by default", "should parse deep object", "should reject numbers for app.source", "should restore req.params", "should support array of paths", "should parse codepage charsets", "handle missing method", "should return false without response headers", "should default to false for prototype values", "should return undefined otherwise", "should run the callback for a method just once", "should reject numbers for app.merge", "should return the remote address", "should return false when the resource is modified", "should accept array of middleware", "should decode correct params", "should default to development", "should decode the capture", "should be configurable", "should honor content-type charset", "should output the same headers as GET requests", "should respond with default Content-Security-Policy", "should overwrite existing req.params by default", "should work without handlers", "should parse multiple key instances", "should reject numbers for app.del", "should permit modifying the .request prototype", "should include PURGE", "should return a new route", "should presist store", "should return []", "should include M-SEARCH", "should return false otherwise", "should handle no message-body", "should set Content-Type", "should include REBIND", "should support fallbacks", "should assert value if function", "should reject Date as middleware", "should reject string", "should handle single error handler", "should return the first acceptable type with canonical mime types", "should parse array index notation with large array", "should override the default behavior", "should use the first value", "should parse array index notation", "should include UNLOCK", "should default to the routes defined", "should match the pathname only", "should work following a partial capture group", "should return true when the resource is not modified", "should support dynamic routes", "should extend the response prototype", "should permit modifying the .application prototype", "should populate the capture group", "should include MERGE", "should not match otherwise", "should only extend for the referenced app", "should not get invoked without error handler on error", "should forward requests down the middleware chain", "should always lookup view without cache", "should reject numbers for app.report", "should reject numbers for app.get", "should not invoke without route handler", "should jump to next route", "should parse utf-16", "should not redirect incorrectly", "should not accept content-encoding", "should allow several capture groups", "should support identity encoding", "should override", "should provide a helpful error", "should special-case Referer", "should return false when not matching", "should include TRACE", "should default to GET", "should throw with notice", "should invoke the callback", "should support deflate encoding", "should be served when dotfiles: \"allow\" is given", "should not include Last-Modified", "should not be greedy immediately after param", "should support index.html", "should use params from router", "should parse when content-length != char length", "should include COPY", "should parse application/octet-stream", "should include PROPFIND", "should handle throwing inside error handlers", "should support byte ranges", "should ignore Rage request header", "should include ACL", "should set \"etag fn\"", "should render the template", "should 413 if over limit", "should serve zero-length files", "should add handler", "should include DELETE", "should strip port number", "should work without leading \".\"", "should 400 when invalid content-length", "should allow custom codes", "should set Content-Range", "should work if number is floating point", "should reject numbers for app.lock", "should fail on unknown charset", "should expose urlencoded middleware", "should 404 when directory", "should check req.body", "should return the canonical", "should fail when omitting the trailing slash", "should not be affected by app.all", "should inherit \"trust proxy\" setting", "should support .get", "should check req.params", "should allow custom type", "should map the array", "should accept multiple arguments", "should call when values differ", "should return an array of the specified addresses", "should return true when Accept is not present", "should defer to next route", "should restore req.params after leaving router", "should work in array of paths", "should accept number of bytes", "should fall-through when URL malformed", "should denote a format", "should behave like connect", "should fail gracefully", "should reject numbers for app.unbind", "should remove OWS around comma", "should allow fallthrough", "should obey Rage request header", "should not mix requests", "should handle throwing inside routes with params", "should reject numbers for app.m-search", "should ignore \"application/x-json\"", "should be called for any URL", "should return undefined when unset", "should work with different charsets", "should call handler in same route, if exists", "should set the child's .parent", "should not parse primitives with leading whitespaces", "should given precedence to the child", "should work with large limit", "should inherit to sub apps", "should reject numbers for app.notify", "should work with IPv6 Host", "should include SEARCH", "should include SUBSCRIBE", "should ignore invalid incoming req.params", "should fall-through when traversing past root", "should parse utf-8", "should capture everything", "should reject numbers for app.mkcalendar", "should expose the response prototype", "should include MOVE", "should reject numbers for app.search", "should prefer child \"trust proxy\" setting", "should re-route when method is altered", "should map a template engine", "should reject numbers for app.move", "should return the first acceptable type", "should set Content-Length to the # of octets transferred", "should only include each method once", "should work with Infinity limit", "should create an instance of it", "should support n-", "should return the addr after trusted proxy based on list", "should stack", "should include PUT", "should next() on mount point", "should handle errors via arity 4 functions", "should include LOCK", "should reject numbers for app.propfind", "should pass error to callback", "should include LINK", "should handle Content-Length: 0", "should not error when inflating", "should 400 on primitives", "should defer all the param routes", "should support .use of other routers", "should 404 if nothing found", "should adapt the Content-Length accordingly", "should fall-through when directory without slash", "should parse for custom type", "should contain full lower path", "should throw if a callback is undefined", "should be not be enabled by default", "should get called when sending file", "should work with unicode", "should assert value is function", "should not get called on redirect", "should denote a greedy capture group", "should expose static middleware", "should return the full type when matching", "should match middleware when omitting the trailing slash", "should catch thrown error", "should parse \"application/octet-stream\"", "should allow sub app to override", "should not stack overflow with a large sync stack", "should include SOURCE", "should include NOTIFY", "should not accept params in malformed paths", "should accept content-encoding", "should expose Router", "should respond with 200 and the entire contents", "should not pollute parent app", "should include BIND", "should emit \"mount\" when mounted", "should match trailing slashes", "should return true", "should 400 on malformed encoding", "should break out of app.router", "should return true when set", "should support urlencoded pathnames", "should set immutable directive in Cache-Control", "should always return language", "should default to Host", "should include GET", "should reject numbers for app.post", "should error if file does not exist", "should 404 when directory without slash", "should respond with 206 \"Partial Content\"", "should 500 if stream not readable", "should be optional by default", "should parse JSON for custom type", "should return language if accepted", "should parse fully-encoded extended syntax", "should ignore application/x-foo", "should ignore maxAge", "should reject numbers for app.bind", "should merge numeric indices req.params when parent has same number", "should return the addr after trusted proxy, from sub app", "should adjust FQDN req.url with multiple routed handlers", "should 404 when URL too long", "should support absolute paths with \"view engine\"", "should set the value to true", "should not stack overflow with a large sync middleware stack", "should return false", "should work \"view engine\" setting", "should handle throw", "should stop at first untrusted", "should ignore charset", "should wrap with an HTTP server", "should ignore FQDN in search", "should expose the application prototype", "should throw for non-string header name", "should include MKCOL", "should support precondition checks", "should be .use()able", "should parse JSON", "should keep correct parameter indexes", "should throw if a callback is not a function", "should parse \"application/x-www-form-urlencoded\"", "should allow pass-through", "should not stack overflow with a large sync route stack", "should not stack overflow with many registered routes", "should be false if language not accepted", "should include UNLINK", "should expose json middleware", "should reject numbers for app.checkout", "should parse JSON for \"application/vnd.api+json\"", "should 404 without routes", "should denote a capture group", "should reject numbers for app.delete", "should reject 0", "should handle render error throws", "should allow escaped regexp", "should travel through routers correctly", "should not respond if the path is not defined", "should throw missing header name", "should not parse extended syntax", "should parse \"text/plain\"", "should return set value", "should call param function when routing middleware", "should reject numbers for app.patch", "should support regexp path", "should default to true for prototype values", "should work within arrays", "should require middleware", "should accept multiple arrays of middleware", "should work cross-segment", "should adjust FQDN req.url", "should work with IPv6 Host and port", "should presist store when inflated", "should not decode spaces", "should parse \"application/x-pairs\"", "should reject string as middleware", "should ignore standard type", "should 400 for bad token", "should ignore X-Forwarded-Host if socket addr not trusted", "should parse \"text/html\"", "should reject numbers for app.mkactivity", "should handle blank URL", "should limit to just .VERB", "should invoke middleware for all requests"], "failed_tests": ["should return the parsed pathname", "req"], "skipped_tests": []}, "fix_patch_result": {"passed_count": 541, "failed_count": 2, "skipped_count": 0, "passed_tests": ["should include original body on error object", "should parse without encoding", "should use the default value unless defined", "should be chainable", "should match a single segment only", "should all .VERB after .all", "should reject numbers for app.put", "should populate req.params with the captures", "should pass-though mounted middleware", "should merge numeric indices req.params when more in parent", "should 405 when OPTIONS request", "should cache with \"view cache\" setting", "should parse parameters with dots", "should return the parent when mounted", "should fail when adding the trailing slash", "should 413 when over limit with Content-Length", "should not obscure FQDNs", "should return the first when Accept is not present", "should next() on directory", "should ignore \"text/xml\"", "should reject numbers for app.unlock", "should reject numbers for app.unsubscribe", "should work inside literal parenthesis", "should be served with \".\"", "should support array of paths with middleware array", "should parse \"application/vnd+octets\"", "should be reasonable when infinite", "should otherwise return the value", "should work when at the limit", "should default to the parent app", "should span multiple segments", "should strip path from req.url", "should expose app.locals", "should allow literal \".\"", "should denote an optional format", "should include PROPPATCH", "should be inclusive", "should work if path has trailing slash", "should reject non-functions", "should 404 when trailing slash", "should support HEAD", "should return an empty array", "should be optional", "should return true when present", "should map logic for a single param", "should reject numbers for app.acl", "should support mount-points", "should ensure regexp matches path prefix", "should ignore \"application/x-foo\"", "should support empty string path", "should fall-through when directory", "should lookup the file in the path", "should presist store when parse error", "should include OPTIONS", "should not parse primitives", "should support gzip encoding", "should support nesting", "should include MKACTIVITY", "should not redirect to protocol-relative locations", "should default to false", "should permit modifying the .response prototype", "should redirect correctly", "should include PATCH", "should reject null as middleware", "should not invoke without a body", "should return the client addr", "should parse array of objects syntax", "should return the Host when present", "should map app.param(name, ...) logic", "should presist store when inflate error", "should work \"view engine\" with leading \".\"", "should 403 when traversing past root", "should match no slashes", "should call param function when routing VERBS", "should throw if a callback is null", "should not hang response", "should 415 on unknown charset prior to verify", "should lookup the mime type", "should disable redirect", "should handle throwing in handler after async param", "should not get called on 404", "should return encoding if accepted", "should ensure redirect URL is properly encoded", "should check req.query", "should include HTML link", "should set a value", "should default to utf-8", "should set Last-Modified", "should return the mounted path", "should presist store when unmatched content-type", "should include HEAD", "should ignore FQDN in path", "should reject numbers for app.subscribe", "should return the addr after trusted proxy based on count", "should include UNBIND", "should include Cache-Control", "should reject number as middleware", "should allow merging existing req.params", "should match identical casing", "should support disabling extensions", "should reject numbers for app.rebind", "should throw when the callback is missing", "should load the file when on trailing slash", "should allow rewriting of the url", "should support using .all to capture all http verbs", "should reject numbers for app.unlink", "should include REPORT", "should support -n", "should reject numbers for app.head", "should default max-age=0", "should match middleware when adding the trailing slash", "should be false if encoding not accepted", "should include UNSUBSCRIBE", "should disable \"view cache\"", "should default object", "should not error on empty routes", "should dispatch", "should not call when values differ on error", "should return the app", "should handle duplicated middleware", "should redirect to trailing slash mount point", "should support altering req.params across routes", "should contain lower path", "should jump out of router", "should work with encoded values", "should merge numeric indices req.params", "is taken to be equal to one less than the current length", "should parse text/plain", "should change default charset", "should work with several", "should not include Accept-Ranges", "should 413 when inflated value exceeds limit", "should return false when set", "should redirect to trailing slash", "should include CHECKOUT", "should parse extended syntax", "should return false when no match is made", "should not choke on auth-looking URL", "should reject numbers for app.link", "should return the app when undefined", "should catch urlencoded ../", "should extend the request prototype", "should require a preceding /", "should not change when options altered", "should serve static files", "should redirect when directory without slash", "should 400 when URL malformed", "should reject numbers for app.mkcol", "should respond with 416", "should set \"trust proxy fn\"", "should accept an argument list of type names", "should 415 on unknown charset", "should throw on bad value", "should expose text middleware", "should eat everything after /", "should return a function with router methods", "should inherit from event emitter", "should allow naming", "should handle throw in .all", "should not alter the status", "should reject numbers for app.proppatch", "should support conditional requests", "should redirect directories", "should work without content-type", "should default to true", "should return the type when matching", "should give precedence to app.render() locals", "should 415 on unknown encoding", "should be callable", "should include a Content-Range header of complete length", "should reject numbers for app.options", "should accept nested arrays of middleware", "should ignore X-Forwarded-Host", "should parse x-www-form-urlencoded", "should support ../", "should 413 when inflated body over limit", "should mount the app", "should not allow root path disclosure", "should handle VERBS", "should fail if not given fn", "should run in order added", "should enable \"view cache\"", "should only call once per request", "should include Accept-Ranges", "should allow leading whitespaces in JSON", "should return the header field value", "should expose the request prototype", "should parse JSON for \"application/json\"", "should denote an optional capture group", "should include Last-Modified", "should pass-though middleware", "should parse primitives", "should reject numbers for app.purge", "should handle empty message-body", "should 400 when only whitespace", "should include correct message in stack trace", "should call when values differ when using \"next\"", "should include POST", "should not throw if all callbacks are functions", "should fall-through when OPTIONS request", "should support index.<engine>", "should throw on old middlewares", "should include MKCALENDAR", "should 400 for incomplete", "should lookup in later paths until found", "should be case-insensitive", "should respect X-Forwarded-Host", "should continue lookup", "should reject numbers for app.trace", "should set the value to false", "should set prototype values", "should fall-through when URL too long", "should be empty for top-level route", "should support mounted app anywhere", "should take quality into account", "should invoke middleware for all requests starting with path", "should support absolute paths", "should accept string", "should only call an error handling routing callback when an error is propagated", "should contain app settings", "should skip POST requests", "should skip non error middleware", "should reject numbers for app.copy", "should include DEL", "should cache with cache option", "should expose raw middleware", "should alias app.delete()", "should parse when truthy value returned", "should require root path to be string", "should add a router per method", "should not include Cache-Control", "should match middleware", "should catch thrown secondary error", "should redirect directories with query string", "should presist store when limit exceeded", "should return undefined for prototype values", "should 413 when over limit with chunked encoding", "should ignore hidden files", "should error from verify", "should handle missing URL", "should redirect relative to the originalUrl", "should be called for any URL when \"*\"", "should require root path", "should adjust FQDN req.url with multiple handlers", "should be disabled by default", "should parse deep object", "should reject numbers for app.source", "should restore req.params", "should support array of paths", "should parse codepage charsets", "handle missing method", "should return false without response headers", "should default to false for prototype values", "should return undefined otherwise", "should run the callback for a method just once", "should reject numbers for app.merge", "should return the remote address", "should return false when the resource is modified", "should accept array of middleware", "should decode correct params", "should default to development", "should decode the capture", "should be configurable", "should honor content-type charset", "should output the same headers as GET requests", "should respond with default Content-Security-Policy", "should overwrite existing req.params by default", "should work without handlers", "should parse multiple key instances", "should reject numbers for app.del", "should permit modifying the .request prototype", "should include PURGE", "should return a new route", "should presist store", "should return []", "should include M-SEARCH", "should return false otherwise", "should handle no message-body", "should set Content-Type", "should include REBIND", "should support fallbacks", "should assert value if function", "should reject Date as middleware", "should reject string", "should handle single error handler", "should return the first acceptable type with canonical mime types", "should parse array index notation with large array", "should override the default behavior", "should use the first value", "should parse array index notation", "should include UNLOCK", "should default to the routes defined", "should match the pathname only", "should work following a partial capture group", "should return true when the resource is not modified", "should support dynamic routes", "should extend the response prototype", "should permit modifying the .application prototype", "should populate the capture group", "should include MERGE", "should not match otherwise", "should only extend for the referenced app", "should not get invoked without error handler on error", "should forward requests down the middleware chain", "should always lookup view without cache", "should reject numbers for app.report", "should reject numbers for app.get", "should not invoke without route handler", "should jump to next route", "should parse utf-16", "should not redirect incorrectly", "should not accept content-encoding", "should allow several capture groups", "should support identity encoding", "should override", "should provide a helpful error", "should special-case Referer", "should return false when not matching", "should include TRACE", "should default to GET", "should throw with notice", "should invoke the callback", "should support deflate encoding", "should be served when dotfiles: \"allow\" is given", "should not include Last-Modified", "should not be greedy immediately after param", "should support index.html", "should use params from router", "should parse when content-length != char length", "should include COPY", "should parse application/octet-stream", "should include PROPFIND", "should handle throwing inside error handlers", "should support byte ranges", "should ignore Rage request header", "should include ACL", "should set \"etag fn\"", "should render the template", "should 413 if over limit", "should serve zero-length files", "should add handler", "should include DELETE", "should strip port number", "should work without leading \".\"", "should 400 when invalid content-length", "should allow custom codes", "should set Content-Range", "should work if number is floating point", "should reject numbers for app.lock", "should fail on unknown charset", "should expose urlencoded middleware", "should 404 when directory", "should check req.body", "should return the canonical", "should fail when omitting the trailing slash", "should not be affected by app.all", "should inherit \"trust proxy\" setting", "should support .get", "should check req.params", "should allow custom type", "should map the array", "should accept multiple arguments", "should call when values differ", "should return an array of the specified addresses", "should return true when Accept is not present", "should defer to next route", "should restore req.params after leaving router", "should work in array of paths", "should accept number of bytes", "should fall-through when URL malformed", "should denote a format", "should behave like connect", "should fail gracefully", "should reject numbers for app.unbind", "should remove OWS around comma", "should allow fallthrough", "should obey Rage request header", "should not mix requests", "should handle throwing inside routes with params", "should reject numbers for app.m-search", "should ignore \"application/x-json\"", "should be called for any URL", "should return undefined when unset", "should work with different charsets", "should call handler in same route, if exists", "should set the child's .parent", "should not parse primitives with leading whitespaces", "should given precedence to the child", "should work with large limit", "should inherit to sub apps", "should reject numbers for app.notify", "should work with IPv6 Host", "should include SEARCH", "should include SUBSCRIBE", "should ignore invalid incoming req.params", "should fall-through when traversing past root", "should parse utf-8", "should capture everything", "should reject numbers for app.mkcalendar", "should expose the response prototype", "should include MOVE", "should reject numbers for app.search", "should prefer child \"trust proxy\" setting", "should re-route when method is altered", "should map a template engine", "should reject numbers for app.move", "should return the first acceptable type", "should set Content-Length to the # of octets transferred", "should only include each method once", "should work with Infinity limit", "should create an instance of it", "should support n-", "should return the addr after trusted proxy based on list", "should stack", "should include PUT", "should next() on mount point", "should handle errors via arity 4 functions", "should include LOCK", "should reject numbers for app.propfind", "should pass error to callback", "should include LINK", "should handle Content-Length: 0", "should not error when inflating", "should 400 on primitives", "should defer all the param routes", "should support .use of other routers", "should 404 if nothing found", "should adapt the Content-Length accordingly", "should fall-through when directory without slash", "should parse for custom type", "should contain full lower path", "should throw if a callback is undefined", "should be not be enabled by default", "should get called when sending file", "should work with unicode", "should assert value is function", "should not get called on redirect", "should denote a greedy capture group", "should expose static middleware", "should return the full type when matching", "should match middleware when omitting the trailing slash", "should catch thrown error", "should parse \"application/octet-stream\"", "should allow sub app to override", "should not stack overflow with a large sync stack", "should include SOURCE", "should include NOTIFY", "should not accept params in malformed paths", "should accept content-encoding", "should expose Router", "should respond with 200 and the entire contents", "should not pollute parent app", "should include BIND", "should emit \"mount\" when mounted", "should match trailing slashes", "should return true", "should 400 on malformed encoding", "should break out of app.router", "should return true when set", "should support urlencoded pathnames", "should set immutable directive in Cache-Control", "should always return language", "should default to Host", "should include GET", "should reject numbers for app.post", "should error if file does not exist", "should 404 when directory without slash", "should respond with 206 \"Partial Content\"", "should 500 if stream not readable", "should be optional by default", "should parse JSON for custom type", "should return language if accepted", "should parse fully-encoded extended syntax", "should ignore application/x-foo", "should ignore maxAge", "should reject numbers for app.bind", "should merge numeric indices req.params when parent has same number", "should return the addr after trusted proxy, from sub app", "should adjust FQDN req.url with multiple routed handlers", "should 404 when URL too long", "should support absolute paths with \"view engine\"", "should set the value to true", "should not stack overflow with a large sync middleware stack", "should return false", "should work \"view engine\" setting", "should handle throw", "should stop at first untrusted", "should ignore charset", "should wrap with an HTTP server", "should ignore FQDN in search", "should expose the application prototype", "should throw for non-string header name", "should include MKCOL", "should support precondition checks", "should be .use()able", "should parse JSON", "should keep correct parameter indexes", "should throw if a callback is not a function", "should parse \"application/x-www-form-urlencoded\"", "should allow pass-through", "should not stack overflow with a large sync route stack", "should not stack overflow with many registered routes", "should be false if language not accepted", "should include UNLINK", "should expose json middleware", "should reject numbers for app.checkout", "should parse JSON for \"application/vnd.api+json\"", "should 404 without routes", "should denote a capture group", "should reject numbers for app.delete", "should reject 0", "should handle render error throws", "should allow escaped regexp", "should travel through routers correctly", "should not respond if the path is not defined", "should throw missing header name", "should not parse extended syntax", "should parse \"text/plain\"", "should return set value", "should call param function when routing middleware", "should reject numbers for app.patch", "should support regexp path", "should default to true for prototype values", "should work within arrays", "should require middleware", "should accept multiple arrays of middleware", "should work cross-segment", "should adjust FQDN req.url", "should work with IPv6 Host and port", "should presist store when inflated", "should not decode spaces", "should parse \"application/x-pairs\"", "should reject string as middleware", "should ignore standard type", "should 400 for bad token", "should ignore X-Forwarded-Host if socket addr not trusted", "should parse \"text/html\"", "should reject numbers for app.mkactivity", "should handle blank URL", "should limit to just .VERB", "should invoke middleware for all requests"], "failed_tests": ["should return the parsed pathname", "req"], "skipped_tests": []}}